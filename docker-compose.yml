services:
  chat-service:
    build:
      context: ./back/chat-service
      dockerfile: Dockerfile
    env_file: ./back/chat-service/.env
    ports:
      - "3002:3002"
    environment:
      - CHAT_PORT=3002
      - CHAT_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@chat-db:5432/chat_db?schema=public
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - chat-db
      - kafka
    volumes:
      - ./back/chat-service:/app
    networks:
      - app-network

  auth-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=auth_db
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  chat-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=chat_db
    volumes:
      - chat-db-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - app-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
    ports:
      - "9092:9092"
    networks:
      - app-network

  api-gateway:
    build:
      context: ./back/gateway
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - PORT=80
    depends_on:
      - auth-service
      - chat-service
    volumes:
      - ./back/gateway/conf.d:/etc/nginx/conf.d
    networks:
      - app-network



volumes:
  auth-db-data:
  chat-db-data:

networks:
  app-network:
    driver: bridge
